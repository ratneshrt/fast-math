// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id            String @id @default(uuid())
  name          String?
  email         String @unique
  image         String?
  highestScore  Int @default(0)
  scores        Score[]
  friendships   Friendship[] @relation("UserFriendships")
  friends       Friendship[] @relation("FriendFriendships")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  provider      Provider
}

model Score{
  id            String @id @default(uuid())
  user          User @relation(fields: [userId], references: [id])
  userId        String
  weekStart     DateTime
  value         Int @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([userId, weekStart])
}

model Friendship{
  id            String @id @default(uuid())
  user          User @relation("UserFriendships",fields: [userId], references: [id])
  userId        String
  friend        User @relation("FriendFriendships",fields: [friendId], references: [id])
  friendId      String
  status        FriendshipStatus @default(PENDING)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([userId, friendId])
}

enum FriendshipStatus{
  PENDING
  ACCEPTED
}

enum Provider{
  Google
}